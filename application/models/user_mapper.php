<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

require_once('user_model.php');

/**
 * @author Thomas Bernhart, thomascbernhart@gmail.com
 */
class User_mapper extends CI_Model {

    /**
     * Name of the db table
     * @type string
     */
	private $tableName = "users";

	public function save(User_model $pUser){
		$lData = array(
					"aaiId" => $pUser->getAaiId(),
					"firstname" => $pUser->getFirstname(),
					"lastname" => $pUser->getLastname(),
					"email" => $pUser->getEmail(),
					"role" => $pUser->getRole()
				);
		if($pUser->isNew()){
			$lData["created"] = NULL;
			$this->db->insert($this->tableName, $lData);
			$pUser->setId($this->db->insert_id()); // Add id generated by database to the doc list object
		}
		else{
			$this->db->where("id", $pUser->getId());
			$this->db->update($this->tableName, $lData);
		}
	}		

	public function delete(User_model $pUser){
		if (!$User->isNew()) {
			$this->db->where('id', $pUser->getId());
			$this->db->delete($this->tableName);
		}
	}
	
	public function get($pId){
		$lQuery = $this->db->get_where($this->tableName, array('id' => $pId), 1);
		if ($lQuery->num_rows() == 1) {
			$lRow = $lQuery->row();
			$lUser = $this->_createUser($lRow);
			return $lUser;
		}
		return false;
	}
	
	/**
	 *
	 */
	public function getByAaiId($pAaiId) {
    	$lQuery = $this->db->get_where($this->tableName, array('aaiId' => $pAaiId), 1);
		if ($lQuery->num_rows() == 1) {
			$lRow = $lQuery->row();
			$lUser = $this->_createUser($lRow);
			return $lUser;
		}
		return false;
	}

    /**
     *
     */
    public function create_user_from_request($p_user_request_id) {
        // sql:
        // INSERT INTO `users` (SELECT null, `aaiId`, `firstname`, `lastname`, `email`, 'user', null, null FROM `user_requests` WHERE `user_request`.`id` = :id);
        // DELETE FROM `users_requests` WHERE `user_requests`.`id` = :id; 
        $l_users_table = $this->db->dbprefix($this->tableName);
        $l_user_requests_table = $this->db->dbprefix('user_requests');
        $sql_insert = "INSERT IGNORE INTO `$l_users_table`";
        $sql_insert .= " (SELECT null, `aaiId`, `firstname`, `lastname`, `email`, 'user', null, null";
        $sql_insert .= " FROM `$l_user_requests_table` WHERE `$l_user_requests_table`.`id` = ";
        $sql_insert .= $this->db->escape($p_user_request_id). ');';
        $sql_delete = "DELETE FROM `$l_user_requests_table` WHERE `id` = " . $this->db->escape($p_user_request_id) . ';';
        
        $this->db->trans_start();
        $this->db->query($sql_insert);
        $this->db->query($sql_delete); 
        $this->db->trans_complete();
        $this->db->trans_off();

        if ($this->db->trans_status() === FALSE) {
            // TODO: generate error message
            return false;
        }
        return true;
    }

	/**
	 * TODO
	 */
	/*
	private function _get($pParams = array(), $pLimit) {
    	if (is_array($pParams)) {
			$this->db->where($pParams);
		} else {
			$this->db->where('id', $pId);
			$this->db->where->limit(1);
		}
		if ($lquery->num_rows() == 1) {
			
		}

	}
	*/

	/**
 	 *
 	 */
	private function _createUser($pRow) {
    	$lUser = new User_model($pRow->aaiId, $pRow->firstname, $pRow->lastname, $pRow->email);
		$lUser->setId($pRow->id);
		$lUser->setRole($pRow->role);
		return $lUser;
	}
}


/* End of file user_mapper.php */
/* Location: ./application/library/user_mapper.php */

