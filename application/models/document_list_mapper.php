<?php

require_once("DocumentList.php");

class Document_list_mapper extends CI_Model {

	private $tableName = "documentLists"; // Name of database table
	private $docToListTable = "documents_documentLists"; // Name of mapping table

	public function save(Document_list_model $pDocList){
		// Table "documentLists"		
		$lData = array("title" => $pDocList->getTitle(),
					   "creator" => $pDocList->getCreator()->getId(),
					   "admin" => $pDocList->getAdmin()->getId());
		if($pDocList->isNew()){
			$lData["created"] = null;
			$this->db->insert($this->tableName, $lData);
			$pDocList->setId($this->db->insert_id()); // Add id generated by database to the doc list object
		}
		else{
			$this->db->where("id", $pDocList->getId());
			$this->db->update($this->tableName, $lData);
		}
		
		// Table "documents_documentLists"
		$lDocListId = $pDocList->getId();
		// Delete all mapping entries
		$this->db->delete($this->docToListTable, array("documentListId" => $lDocListId)); 
		$lListData = array();		
		foreach($pDocList->getDocumentIds() as $lDocumentId){
			$lListData[] = array("documentListId" => $lDocListId,
								 "documentId" => $lDocumentId);
		}
		// Rewrite all mapping entries
		$this->db->insert_batch($this->docToListTable, $lListData);
	}

	public function delete(Document_list_model $pDocList){
		if(!($pDocList->isNew())){
			$this->db->delete($this->tableName, array("id" => $pDocList->getId()));
			$this->db->delete($this->docToListTable, array("documentListId" => $pDocList->getId()));
		}
	}
	
	// Expects the ID of an existing document list
	public function get($pId){
		$lQuery = $this->db->get_where($this->tableName, array("id" => $pId));
		if($lQuery->num_rows() == 1){
			$lResult = $lQuery->row();
			$lDocList = new Document_list_model($lResult->title, $lResult->creator);
			$lDocList->setId($lResult->id);
			$lDocList->setAdmin($lResult->adminId);
			$lDocList->setLastUpdated(new DateTime("Y-m-d H:i:s"));
			$lDocList->setCreated(new DateTime("Y-m-d H:i:s"));
			// Add documents to the list
			$lQuery = $this->db->get_where($this->docToListTable, array("documentListId" => $pId));
			if($lQuery->num_rows() > 0){
				foreach($lQuery->result() as $lMappingEntry){
					$lDocList->addDocumentById($lMappingEntry->documentId); // Temporarily adding by ID
				}
			};
		}
		return $lDocList;
	}

}

